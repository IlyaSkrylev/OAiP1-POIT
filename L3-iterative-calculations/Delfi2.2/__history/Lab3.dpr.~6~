Program Lab3;
{
 The program finds the value of a function
 with two precisions and finds the number
 of row elements in each precision.
}

// Determining the type of console program.
{$APPTYPE CONSOLE}

// Setting the name of the module.
uses
  System.SysUtils;

// Declaration of constant variables.
Const
  Eps1 = 1E-5;
  Eps2 = 1E-6;

// Assign certain data types to variables.
Var
  XStart, XFinish, XStep: real;
  X, Y: real;
  K, A, Denum: integer;
  Num, Delta: real;
  F: boolean;
  {
   X - function variable Y;
   Y - function value;
   K - enumeration of values to calculate
   the value of an intermediate function;
   A - calculation of the factorial in the denominator;
   Den, Num - variables for setting the function;
   Delta - difference of functions at different values;
   F - a logical variable.
  }

begin
  Repeat

    // Request to enter the values of the main
    // variables and check for correctness
    Try
      write('Введите начальное значение X: ');
      readln(XStart);
      write('Введите конечное значение X: ');
      readln(XFinish);
      write('Введите шаг X: ');
      readln(XStep);


      // If incorrect data is entered, the user
      // is prompted to enter the data again.
      while (XStart <= 0) or (XFinish >= 1) or (XFinish < XStart) or (XStep < 0) do
      begin
        writeln('___________________________________');
        writeln;
        writeln('X принадлежит промежутку (0; 2.3]!');
        writeln('Конечное значение промежутка должно быть больше конечного!');
        writeln('___________________________________');
        writeln;
        write('Введите начальное значение X: ');
        readln(XStart);
        write('Введите конечное значение X: ');
        readln(XFinish);

      // When the user re-enters the
      // correct data, the cycle ends.
      end;

    // Except for repetition
    F := True
    Except
      writeln('___________________________________');
      writeln;
      writeln('Вы ввели некорректные данные!');
      writeln('___________________________________');
      writeln;

      // Transition to repetition
      F := False;
    End;
  Until F;

  writeln('______________________________');

  // Assign the initial value to a variable.
  X := XStart;

  // While X has not reached the final
  // value, the cycle A1 is repeated.
  Repeat
    F := True;
    writeln;
    writeln('  X = ', floattostr(X), ':');

    // Counting the numerator, denominator
    // and calculating the function when
    // k is equal to 1.
    Num := X*X*X;
    Denum := 1;
    Y := -Num/Denum;
    Delta := Eps1 + 1;

    // Assigning an initial value
    // to auxiliary variables.
    A := 1;
    K := 2;

    // As long as the difference between the
    // values of the functions is greater than
    // the second precision, cycle A2 is repeated.
    Repeat
      A := A+2;
      Num := Num*X;
      Denum := Denum*(A-1)*A;

      // When raised to an even power of -1,
      // the result of the intermediate
      // function will be positive.
      If K mod 2 = 0 then
        Y := Y + Num/Denum

      // Otherwise, the result will be negative.
      Else
        Y := Y -Num/Denum;

      // Update variables for subsequent cycles.
      Delta := Num/Denum;

      // Variable output at first precision.
      If (abs(Delta) <= Eps1) and F then
      begin
        F := False;
        write('При Eps 1: Y = ', Y:9:5);
        write(';  N = ', (K-1));
        writeln;

      // End of the loop with the output
      // of the first precision.
      end;

      // Increment of the K variable.
      K := K+1;
    Until abs(Delta) < Eps2;



    // Output of variables at the second precision.
    F := False;
    write('При Eps 2: Y = ', Y:9:6);
    write(';  N = ', (K-1));
    writeln;

    // Increment of the X variable.
    X := X+XStep;
  Until X > XFinish;

  readln;
End.

